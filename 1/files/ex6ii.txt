module half_adder (output S, C, input x, y);
	xor (S, x, y);
	and (C, x, y);
endmodule

module full_adder (output S, C, input x, y, z);
	wire S1, C2, C2;

	half_adder
		HA1 (S1, C1, x, y),
		HA2 (S, C2, S1, z);

  or G1 (C, C2, C1);
endmodule

module 4_bit_adder_subtractor (output [3:0] Sum, output C4, input [3:0] A, B, input M);
	wire C1, C2, C3;
	wire w0, w1, w2, w3;

	xor
		(w0, B[0], M),
		(w1, B[1], M),
		(w2, B[2], M),
		(w3, B[3], M);

	full_adder
		FA0(Sum[0], C1, A[0], B[0], C0),
		FA1(Sum[0], C1, A[0], B[0], C0),
		FA2(Sum[0], C1, A[0], B[0], C0),
		FA3(Sum[0], C1, A[0], B[0], C0);
endmodule